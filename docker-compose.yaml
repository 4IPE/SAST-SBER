services:

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=L0ZEQh1yTbGhNNUE7-6wSQ
    volumes:
      - kafka-vol:/bitnami/kafka
    networks:
      - sast-network
  sast-manager:
    build: sast-manager
    image: manager-img
    container_name: manager-con
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://sast-db:5432/sast-data
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 12345
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - sast-db

    networks:
      - sast-network
# restart: "on-failure"

  kafka-tools:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    networks:
      - sast-network
    entrypoint: [ "sleep", "infinity" ]

  sast-db:
    image: postgres:16.1
    container_name: db-con
    ports:
      - "6542:5432"
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=admin
      - POSTGRES_DB=sast-data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10
    volumes:
      - sast-db-data:/var/lib/postgresql/data

    networks:
      - sast-network
#    restart: "on-failure"

  sast-agent:
   build: sast-agent
   image: agent-img
   container_name: agent-con
   ports:
    - "6060:6060"
   environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
   depends_on:
      - sast-manager
   networks:
      - sast-network

  sast-ui:
    build: sast-ui
    image: ui-img
    container_name: ui-con
    ports:
      - "3000:80"
    depends_on:
      - sast-manager
#    restart: "on-failure"
volumes:
  sast-db-data:
  kafka-vol:

networks:
  sast-network:
    driver: bridge

